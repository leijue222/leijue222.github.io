const t=JSON.parse(`{"key":"v-ae500f20","path":"/tutorial/ops/linux/bash/archives/async.html","title":"异步任务","lang":"zh-CN","frontmatter":{"description":"异步任务 Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办? bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。 首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:","head":[["meta",{"property":"og:url","content":"https://leijue222.github.io/tutorial/ops/linux/bash/archives/async.html"}],["meta",{"property":"og:site_name","content":"Yuze's Blog"}],["meta",{"property":"og:title","content":"异步任务"}],["meta",{"property":"og:description","content":"异步任务 Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办? bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。 首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-11T02:47:21.000Z"}],["meta",{"property":"article:author","content":"Yuze"}],["meta",{"property":"article:modified_time","content":"2023-04-11T02:47:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异步任务\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-11T02:47:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yuze\\",\\"url\\":\\"https://leijue222.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1681181241000,"updatedTime":1681181241000,"contributors":[{"name":"leijue222","email":"dyw222@foxmail.com","commits":1}]},"readingTime":{"minutes":1.75,"words":524},"filePathRelative":"tutorial/ops/linux/bash/archives/async.md","localizedDate":"2023年4月11日","excerpt":"<h1> 异步任务</h1>\\n<p>Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办?</p>\\n<p>bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。</p>\\n<p>首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:</p>","autoDesc":true}`);export{t as data};
