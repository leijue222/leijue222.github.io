const e=JSON.parse(`{"key":"v-94472630","path":"/tutorial/front-end/vue/core/template.html","title":"模板语法","lang":"zh-CN","frontmatter":{"title":"模板语法","icon":"object","order":4,"description":"Vue 使用一种基于 HTML 的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。 在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。 如果你对虚拟 DOM 的概念比较熟悉，并且偏好直接使用 JavaScript，你也可以结合可选的 JSX 支持直接手写渲染函数而不采用模板。但请注意，这将不会享受到和模板同等级别的编译时优化。","head":[["meta",{"property":"og:url","content":"https://leijue222.github.io/tutorial/front-end/vue/core/template.html"}],["meta",{"property":"og:site_name","content":"Yuze's Blog"}],["meta",{"property":"og:title","content":"模板语法"}],["meta",{"property":"og:description","content":"Vue 使用一种基于 HTML 的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。 在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。 如果你对虚拟 DOM 的概念比较熟悉，并且偏好直接使用 JavaScript，你也可以结合可选的 JSX 支持直接手写渲染函数而不采用模板。但请注意，这将不会享受到和模板同等级别的编译时优化。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-11T02:47:21.000Z"}],["meta",{"property":"article:author","content":"Yuze"}],["meta",{"property":"article:modified_time","content":"2023-04-11T02:47:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板语法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-11T02:47:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yuze\\",\\"url\\":\\"https://leijue222.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"文本插值","slug":"文本插值","link":"#文本插值","children":[]},{"level":2,"title":"原始 HTML","slug":"原始-html","link":"#原始-html","children":[]},{"level":2,"title":"Attribute 绑定","slug":"attribute-绑定","link":"#attribute-绑定","children":[{"level":3,"title":"简写","slug":"简写","link":"#简写","children":[]},{"level":3,"title":"布尔型 Attribute","slug":"布尔型-attribute","link":"#布尔型-attribute","children":[]},{"level":3,"title":"动态绑定多个值","slug":"动态绑定多个值","link":"#动态绑定多个值","children":[]}]},{"level":2,"title":"使用 JavaScript 表达式","slug":"使用-javascript-表达式","link":"#使用-javascript-表达式","children":[{"level":3,"title":"仅支持表达式","slug":"仅支持表达式","link":"#仅支持表达式","children":[]},{"level":3,"title":"调用函数","slug":"调用函数","link":"#调用函数","children":[]},{"level":3,"title":"受限的全局访问","slug":"受限的全局访问","link":"#受限的全局访问","children":[]}]},{"level":2,"title":"指令 Directives","slug":"指令-directives","link":"#指令-directives","children":[{"level":3,"title":"参数 Arguments","slug":"参数-arguments","link":"#参数-arguments","children":[]},{"level":3,"title":"动态参数","slug":"动态参数","link":"#动态参数","children":[]},{"level":3,"title":"动态参数值的限制","slug":"动态参数值的限制","link":"#动态参数值的限制","children":[]},{"level":3,"title":"动态参数语法的限制","slug":"动态参数语法的限制","link":"#动态参数语法的限制","children":[]},{"level":3,"title":"修饰符 Modifiers","slug":"修饰符-modifiers","link":"#修饰符-modifiers","children":[]}]}],"git":{"createdTime":1681181241000,"updatedTime":1681181241000,"contributors":[{"name":"leijue222","email":"dyw222@foxmail.com","commits":1}]},"readingTime":{"minutes":8.01,"words":2402},"filePathRelative":"tutorial/front-end/vue/core/template.md","localizedDate":"2023年4月11日","excerpt":"<p>Vue 使用一种基于 HTML 的模板语法，使我们能够声明式地将其组件实例的数据绑定到呈现的 DOM 上。所有的 Vue 模板都是语法层面合法的 HTML，可以被符合规范的浏览器和 HTML 解析器解析。</p>\\n<p>在底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。</p>\\n<p>如果你对虚拟 DOM 的概念比较熟悉，并且偏好直接使用 JavaScript，你也可以结合可选的 JSX 支持直接手写渲染函数而不采用模板。但请注意，这将不会享受到和模板同等级别的编译时优化。</p>","autoDesc":true}`);export{e as data};
